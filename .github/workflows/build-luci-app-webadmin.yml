name: build-luci-app-webadmin

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
      - "r*"

jobs:
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_generic
          #- i386_pentium-mmx
          #- loongarch64_generic
          #- mips_mips32
          #- mipsel_24kc
          #- mipsel_mips32
          - x86_64

    permissions:
      actions: write
      contents: write
      
    steps:
      - name: Fetch latest release tag
        run: |
          latest_tag="r$(date +"%Y%m%d")"
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          echo "✅ Found release tag: $latest_tag"
          
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
    
      - name: Building packages
        uses: sbwml/openwrt-gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-openwrt-24.10
          FEEDNAME: packages_ci
          PACKAGES: luci-app-webadmin
          NO_REFRESH_CHECK: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}
          path: bin/packages/${{ matrix.arch }}/packages_ci/*.ipk

      - name: Clone makeself repository
        run: git clone https://github.com/megastep/makeself.git

      - name: Organize files
        run: |
          # 创建存放目录
          mkdir -p app_${{ matrix.arch }}
          
          cp -f bin/packages/${{ matrix.arch }}/packages_ci/*.ipk app_${{ matrix.arch }}/
          
          ls app_${{ matrix.arch }}
          
      - name: Create install.sh scripts
        run: |
          cat <<EOF > app_${{ matrix.arch }}/install.sh
          #!/bin/sh
          opkg update
          if [ $? -ne 0 ]; then
              echo "update failed。"
              exit 1
          fi
          opkg install app_${{ matrix.arch }}/*.ipk
          EOF
          
          chmod +x app_${{ matrix.arch }}/install.sh

      - name: Move app directories to makeself
        run: |
          mv app_${{ matrix.arch }} makeself/

      - name: Create self-extracting packages
        run: |
          cd makeself
          ./makeself.sh app_${{ matrix.arch }}/ ${{ env.PACKAGES }}_${{ matrix.arch }}_${{ env.LATEST_TAG }}.run "by github action" ./install.sh

      - name: Check file sizes
        run: |
          ls -lh makeself/*.ipk
          ls -lh makeself/*.run

      - name: Upload packages
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: ${{ env.LATEST_TAG }}
          release_name: Release ${{ env.LATEST_TAG }}
          files: |
            bin/packages/${{ matrix.arch }}/packages_ci/*.ipk
            makeself/*.run
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
